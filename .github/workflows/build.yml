name: Build and Analyze

on:
  push:
    branches:
      - master
      - main
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  build:
    name: Build and SonarCloud Analysis
    runs-on: ubuntu-latest

    steps:
      # üì¶ Paso 1: Clonar el repositorio
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Historial completo para SonarCloud

      # ‚òï Paso 2: Configurar JDK 21
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 21

      # üì¶ Paso 3: Cache de dependencias Maven
      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      # üì¶ Paso 4: Cache de SonarCloud
      - name: Cache SonarCloud packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      # üî® Paso 5: Build, Test y An√°lisis con SonarCloud
      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Token generado autom√°ticamente por GitHub Actions
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}    # üîê Token de SonarCloud guardado en GitHub Secrets
          SONAR_ORG: ${{ secrets.SONAR_ORG }}        # üîê Organizaci√≥n de SonarCloud
          SONAR_PROJECT_KEY: ${{ secrets.SONAR_PROJECT_KEY }}  # üîê Llave del proyecto SonarCloud
          VAULT_TOKEN: ${{ secrets.VAULT_TOKEN }}        # (Opcional) Token de Vault
          VAULT_URI: ${{ secrets.VAULT_URI }}            # (Opcional) URL de Vault
          VAULT_PATH: ${{ secrets.VAULT_PATH }}           # (Opcional) Ruta de Vault
        run: |
          mvn -B clean verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar \
            -Dsonar.projectKey=${SONAR_PROJECT_KEY} \
            -Dsonar.organization=${SONAR_ORG} \
            -Dsonar.host.url=https://sonarcloud.io \
            -Dsonar.login=${SONAR_TOKEN} \
            -X

      # ‚úÖ Paso 6: Mostrar resultados
      - name: Build completed
        if: success()
        run: |
          echo "‚úÖ Build and SonarCloud analysis completed successfully!"
          echo "üìä View results at: https://sonarcloud.io/summary/new_code?id=${{ secrets.SONAR_PROJECT_KEY }}"
